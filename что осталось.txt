добавить в записку слова продолжение приложения А
в содержании написать приложени - листинг и т.д


Диаграмма вариантов использования — диаграмма, отражающая отношения между акторами и прецедентами и являющаяся составной частью модели прецедентов, позволяющей описать систему на концептуальном уровне.

Описание системы с помощью IDEF0 называется функциональной моделью. Функциональная модель предназначена для описания существу¬ющих бизнес-процессов, в котором используются как естественный, так и графический языки. Для передачи информации о конкретной системе источником графического языка является сама методология IDEF0.
Методология IDEF0 предписывает построение иерархической системы диаграмм - единичных описаний фрагментов системы. Сначала проводится описание системы в целом и ее взаимодействия с окружающим миром (контекстная диаграмма), после чего проводится функциональная деком¬позиция - система разбивается на подсистемы и каждая подсистема опи¬сывается отдельно (диаграммы декомпозиции). Затем каждая подсистема разбивается на более мелкие и так далее до достижения нужной степени подробности.
Каждая IDEF0-диаграмма содержит блоки и дуги. Блоки изображают функции моделируемой системы. Дуги связывают блоки вместе и отображают взаимодействия и взаимосвязи между ними.
Функциональные блоки (работы) на диаграммах изображаются прямоугольниками, означающими поименованные процессы, функции или задачи, которые происходят в течение определенного времени и имеют распознаваемые результаты. Имя работы должно быть выражено отглагольным существительным, обозначающим действие.
IDEF0 требует, чтобы в диаграмме было не менее трех и не более шести блоков. Эти ограничения поддерживают сложность диаграмм и модели на уровне, доступном для чтения, понимания и использования.


В результате курсового проекта было реализовано консольное приложение, позволяющее автоматизировать систему тестирования по различным темам.
В рамках работы над курсовым проектом были реализованы:
– разделение ролей, авторизация пользователя, хранение пароля в зашифрованном виде;
– просмотр необходимой информации;
– добавление, редактирование, и удаление записей;
– поиск, сортировка и фильтрация записей;
– базовые принципы ООП;
– обработка ошибок программы.
Также были использованы:
– стандартные, пользовательские, дружественные, виртуальные функции;
– пространства имен (стандартные и собственные);
– механизмы абстракции;
– классы и наследование;
– перегрузка методов;
– шаблоны классов и методов;
– динамическое выделение памяти и умные указатели;
– потоки С++, перегрузка операторов ввода/вывода, контролирование работы с потоком
– инкапсуляция, переопределение методов, абстрактные классы, передача параметров по ссылке и по значению, статические методы и поля.
Создание кода производилось в IDE Visual Studio 2019 на языке C++. При проектировании системы были выполнено моделирование с использованием стандартов IDEEF0 и UML 2.0.




if(id<9999999)
"\t\t"

проверить нормально ли работает сплайс

//bool Student::PrintAvailableAndNoSolvedTest(list<Test*>* ptrFilteredTestList, int* countPrintedTests)
//{
//	*countPrintedTests = 0;
//	if (!ptrFilteredTestList->size())
//	{
//		cout << "\nДоступных тестов нет\n";
//		return false;
//	}
//	int i = 1;
//	cout << "№\tID\t\tПредмет\tКурс\tКраткое описание\n";
//	for (auto iter = ptrFilteredTestList->begin(); iter != ptrFilteredTestList->end(); iter++,i++)
//	{
//		if (!CheckSolvedTestList(*iter))
//			continue;
//		cout << "\n " << i << ") ";
//		(*iter)->PrintTestBriefly();
//		(*countPrintedTests)++;
//	}
//	if (!(*countPrintedTests))
//	{
//		cout << "\n\nВы решили все доступные тесты\n";
//		return false;
//	}
//	return true;
//}

Введение	3
1 Обзор автоматизируемой предметной области, программных аналогов, методов и алгоритмов решения поставленной задачи	4
1.1 Обзор предметной области	4
1.2 Обзор программных аналогов	6
1.3 Обзор методов и алгоритмов решения поставленной задачи	7
2 Функциональное моделирование на основе стандарта IDEF0	9
3 Структура используемых данных	16
4 Разработка и описание диаграммы классов приложения	20
5 Разработка и описание диаграммы вариантов использования приложения	29
6 Схема алгоритма работы всей программы и алгоритма работы двух и более основных методов	31
7 Описание алгоритма запуска приложения, его использования, результаты работы программы, тестирования ошибок	32
Заключение	43
Список использованных источников	44
Приложение А	45
Приложение Б	59
Приложение В	61
Приложение Г	62




